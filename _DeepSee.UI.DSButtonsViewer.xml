<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="%DeepSee.UI.DSButtonsViewer">
<Description>
DeepSee DeepSeeButtons Viewer.
Display contents of the DeepSeeButtons html file for the current namespace.
</Description>
<Super>%DeepSee.UI.standardPage</Super>
<System>4</System>
<TimeCreated>64636,45154.455633</TimeCreated>

<Parameter name="PAGENAME">
<Default>DeepSeeButtons Viewer</Default>
</Parameter>

<Parameter name="DOCBOOKID">
</Parameter>

<Property name="targetURL">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<XData name="Style">
<Data><![CDATA[
<style type="text/css">

body {
	background: rgb(240,240,240);
}

.ribbonTitle {
	color: rgb(71,72,67);
	background: rgb(140,221,174);
}

#logFile {
	border: 1px solid #808080;
	background: white;
	overflow: auto;
	margin-left: 20px;
}

#logFile pre {
	color: #404040;
	padding: 3px;
}

.footerlinks {
	font-family: Arial, Helvetica, sans-serif;
	font-size: 10px;
	font-style: bold;
	color: #3b84bc;
	padding-left:4px;
}
</style>
]]></Data>
</XData>

<XData name="contentPane">
<Description>
This XML defines the contents of the contents pane for this page.</Description>
<XMLNamespace>http://www.intersystems.com/zen</XMLNamespace>
<Data><![CDATA[
<pane xmlns="http://www.intersystems.com/zen" 
	xmlns:deepsee="http://www.intersystems.com/deepsee"
>
<iframe id="deepseebuttons" frameBorder="false" width="600" height="400" />
<!--<html id="logFile" OnDrawContent="DrawDSButtons"/>-->

</pane>
]]></Data>
</XData>

<Method name="%GetDeepSeeButtonsFileName">
<Description>
TO BE MOVED TO %DeepSee.Utils
Return the full name of a DeepSeeButtons file.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>pFileName:%String="DeepSeeButtons"</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set filename = ##class(%Library.File).NormalizeFilename($system.Util.ManagerDirectory() _ 
	pFileName _ ".html")
	Quit filename
]]></Implementation>
</Method>

<Method name="%OnAfterCreatePage">
<Description>
Point the iframe at the URL specified in targetURL.</Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tFileName = ##class(%DeepSee.UI.DSButtonsViewer).%GetDeepSeeButtonsFileName()
	/*Set ..targetURL = filename
	
	// Ensure ..targetURL uses a relative path to avoid cross site scripting
	Do ##class(%Net.URLParser).Parse(..targetURL,.tURLParts)
	Set ..targetURL = $get(tURLParts("path"))
	If ($get(tURLParts("query")) '= "") {
		Set ..targetURL = ..targetURL _ "?" _ tURLParts("query")
	}
	If ($get(tURLParts("fragment")) '= "") {
		Set ..targetURL = ..targetURL _ "#" _ tURLParts("fragment")
	}
	*/
	Set tSourceFrame = ..%GetComponentById("sourceFrame")
	//Set tSourceFrame.src = ..targetURL
	//Set tSourceFrame.src = tFileName
	Set tSourceFrame.src = "file:///home/amarin/intersystems/cache20172/mgr/DeepSeeButtons.html"

	/*
	Try {
		Set tSourceControlClass = ##class(%Studio.SourceControl.Interface).SourceControlClassGet()
		If (tSourceControlClass '= "") {
			Do $classmethod(tSourceControlClass,"GetPortalPageOptions",..targetURL,.tOptions)
			If ($get(tOptions("IECompatibility")) = 1) {
				Set ..%UseIEEdge = 0
			}
			If ($get(tOptions("CSSLevel")) '= "") {
				Set ..%CSSLevel = tOptions("CSSLevel")
			}
		}
	}
	Catch {}*/

	Quit ##super()
]]></Implementation>
</Method>

<Method name="DrawDSButtons">
<Description>
Draw contents of DeepSeeButtons.</Description>
<FormalSpec>pSeed:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tSC = $$$OK
	Try {
		Set tFileName = ##class(%DeepSee.UI.DSButtonsViewer).%GetDeepSeeButtonsFileName()

		If ('##class(%File).Exists(tFileName)) {
			&html<<pre>>
			Write $$$Text("DeepSeeButtons does not exist: "),!
			Write tFileName,!
			&html<</pre>>
			Quit
		}
		/*
		
<page xmlns="http://www.intersystems.com/zen" title="">
<iframe width="1000" height="800"
    src="_DeepSee.UserPortal.DashboardViewer.zen?DASHBOARD=Patients.dashboard&amp;EMBED=1&amp;SETTINGS=FILTER:[HOMED].[H1].[ZIP].%26[32006]~[HomeD].[H1].[CITY].%26[8]" 
    />
</page>
		*/
		//&html<<iframe width="1000" height="800" src="file:///home/amarin/intersystems/cache20172/mgr/DeepSeeButtons.html">>
		&html<<html>>
		Set tFile = ##class(%File).%New(tFileName)
		Set tSC = tFile.Open("RS")
		If $$$ISERR(tSC) Quit
		While ('tFile.AtEnd) {
			Write $ZCVT(tFile.ReadLine(),"O","HTML"),!
		}
		&html<</html>>
		/*&html<<pre>>
		Write tFileName,!
		Write $ZDT($ZU(188),3),!			// DTB332 - Use $ZU function which accounts for local time
		Write "-----------------------",!

		Set tFile = ##class(%File).%New(tFileName)
		Set tSC = tFile.Open("RS")
		If $$$ISERR(tSC) Quit
		While ('tFile.AtEnd) {
			Write $ZCVT(tFile.ReadLine(),"O","HTML"),!
		}

		Write "###",!
		&html<</pre>>
		&html<<a href="#top" name="bottom" class="footerlinks">#($$$TextHTML("[Goto Top]"))#</a>>
		*/
	}
	Catch(ex) {
		Set tSC = ex.AsStatus()
	}

	Quit tSC
]]></Implementation>
</Method>

<Method name="%OnGetTitle">
<Description>
Get the (localized) title string for the page.</Description>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Quit $$$Text("DeepSeeButtons Viewer")
]]></Implementation>
</Method>

<Method name="%OnGetPageName">
<Description>
Get the name for the page.</Description>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Quit $$$Text("DeepSeeButtons Viewer")
]]></Implementation>
</Method>

<Method name="%OnGetProductName">
<Description>
Get the product name for the page.</Description>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Quit "DeepSee"
]]></Implementation>
</Method>

<Method name="OnGetRibbonInfo">
<Description>
Get information to display in the ribbon bar.</Description>
<FormalSpec>*pDisplay:%Boolean,*pViewIcons:%List,*pSortOptions:%List,*pSearchBox:%Boolean,*pRibbonTitle:%String,*pCommands:%List</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set pDisplay = 1
	Set pSearchBox = 0
	Set pRibbonTitle = $$$Text("Log Viewer")

	// commands
	// $LB(id,caption,help,onclick)
	Set pCommands(1) = $LB("cmdRefresh",$$$Text("Refresh"),$$$Text("Reload DeepSeeButtons"),"zenPage.refreshLog();")
	Set pCommands(2) = $LB("cmdDelete",$$$Text("Delete"),$$$Text("Delete DeepSeeButtons"),"zenPage.deleteLog();")
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="onPopupAction">
<Description>
This client event is fired when the a popup page launched from this page fires an action.</Description>
<FormalSpec>popupName,action,value</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	switch(popupName) {
	case 'switchNamespace':
		var homeurl = zenLink("/csp/sys/%25CSP.Portal.Home.zen");
		var url = zenPage.GetNewURL(value,"_DeepSee.UI.LogViewer.zen");
		if (url == "" || value == "%SYS") url = homeurl;
		self.document.location = url;
		break;
	}
]]></Implementation>
</Method>

<Method name="onlayoutHandler">
<Description>
Adjust sizes of components on the page.</Description>
<FormalSpec>load</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	try {
		this.adjustSizes();
	}
	catch(ex) {
		zenExceptionHandler(ex,arguments,'Error in onlayoutHandler');
	}
]]></Implementation>
</Method>

<Method name="adjustSizes">
<Description>
Adjust sizes of components on the page.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	try {
		var logFile = zen('logFile');
		var divLog = logFile.getEnclosingDiv();

		// find size of window
		var winHeight = zenGetWindowHeight();
		var winWidth = zenGetWindowWidth();
		var th = this.getTitleAreaHeight();
		var h = winHeight - (25 + th);

		if (divLog) {
			divLog.style.width = winWidth - (25) + 'px';
			divLog.style.height = h + 'px';
		}
	}
	catch(ex) {
		zenExceptionHandler(ex,arguments,'Error in adjustSizes');
	}
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
/*/// This class method callback is called just before the server-side page 
/// object is created.
Method %OnAfterCreatePage() As %Status
{
	Set tSC = $$$OK
	Try {
		Set tSC = ##super()
		If $$$ISERR(tSC) Quit
	}
	Catch(ex) {
		Set tSC = ex.AsStatus()
	}
	Quit tSC
}
*/
]]></Content>
</UDLText>

<Method name="refreshLog">
<Description>
Reload contents of file.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[	zen('logFile').refreshContents();
]]></Implementation>
</Method>

<Method name="deleteLog">
<Description>
Delete DeepSeeButtons.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	if (confirm($$$Text('Do you wish to delete the DeepSeeButtons file?'))) {
		var msg = zenPage.DeleteLogFile();
		if ('' !== msg) {
			alert(msg);
		}
		zen('logFile').refreshContents();
	}
]]></Implementation>
</Method>

<Method name="DeleteLogFile">
<Description>
Delete the DeepSeeButtons.</Description>
<ReturnType>%String</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	Set tSC = $$$OK
	Set tMsg = ""
	Try {
		Set tSC = ##class(%DeepSee.Utils).%KillLogFile()
		If $$$ISERR(tSC) Quit
	}
	Catch(ex) {
		Set tSC = ex.AsStatus()
	}
	If $$$ISERR(tSC) {
		Set tMsg = $System.Status.GetOneErrorText(tSC)
	}
	Quit tMsg
]]></Implementation>
</Method>
</Class>
</Export>
