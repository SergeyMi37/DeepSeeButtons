<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for UNIX (SUSE Linux Enterprise Server for x86-64) 2017.2.1 (Build 801)" ts="2018-03-30 11:14:18">
<Class name="%DeepSee.UI.DSButtonsViewer">
<Description>
DeepSee DeepSeeButtons Viewer.
Display contents of the DeepSeeButtons html file for the current namespace.
</Description>
<Super>%DeepSee.UI.standardPage</Super>
<System>4</System>
<TimeChanged>64737,40414.919269</TimeChanged>
<TimeCreated>64636,45154.455633</TimeCreated>

<Parameter name="PAGENAME">
<Default>DeepSeeButtons Viewer</Default>
</Parameter>

<Parameter name="DOCBOOKID">
<Default>D2MODEL_cube_build_errors</Default>
</Parameter>

<Property name="targetURL">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Property name="Cubes">
<Description>
Property trackingId As %ZEN.Datatype.string;</Description>
<Type>%ZEN.Datatype.string</Type>
</Property>

<Property name="trackingId">
<Description>
Id used to track progress.</Description>
<Type>%ZEN.Datatype.string</Type>
</Property>

<Property name="nameSpace">
<Type>%ZEN.Datatype.string</Type>
</Property>

<Property name="getLogs">
<Type>%Boolean</Type>
</Property>

<Property name="htmlPath">
<Type>%ZEN.Datatype.string</Type>
</Property>

<XData name="Style">
<Data><![CDATA[
<style type="text/css">
body {
	background: rgb(240,240,240);
	padding: 5px;
}
.ribbonTitle {
	color: rgb(71,72,67);
	background: rgb(140,221,174);
}
.statusTable {
	background: white;
	border: 1px solid #404040;
	width: 500px;
}

.statusTable td {
	padding: 2px;
	padding-right: 5px;
	padding-left: 5px;
	border-right: 1px solid #808080;
	border-bottom: 1px solid #808080;
}

.footerlinks {
	font-family: Arial, Helvetica, sans-serif;
	font-size: 10px;
	font-style: bold;
	color: #3b84bc;
	padding-left:4px;
}
</style>
]]></Data>
</XData>

<XData name="contentPane">
<Description>
This XML defines the contents of the contents pane for this page.</Description>
<XMLNamespace>http://www.intersystems.com/zen</XMLNamespace>
<Data><![CDATA[
<pane xmlns="http://www.intersystems.com/zen" 
	xmlns:deepsee="http://www.intersystems.com/deepsee"
>

<vgroup cellStyle="padding-bottom: 4px;">
<label label="Cubes for detail information" labelClass=""/>
<hgroup cellVAlign="top">
<text id="Cubes" label="" value="#(%page.Cubes)#" size="70" 
hint="List cubes. Type ALL for all cubes (might take some time)"/>
<image src="deepsee/ds2_magnify_44.png" width="16" height="16" onclick="zenPage.editItem('GetCubeList');"/>
</hgroup>
<checkbox id="getLogs" caption="Collect logs" title="Include cconsole.log, Query Log, and DeepSee logs in DeepSeeButtons" 
onchange="zenPage.applyDetails(zenThis.id);" value="1"/>
<hgroup id="idRemoteFile" cellVAlign="bottom" enclosingStyle="padding-top:20px;" >
<text id="htmlDirectory" size="70" label="Output directory" onchange="zenPage.setExportDirectory(zenThis.getValue());"/>
<button caption="Browse" id="btnBrowse" controlClass="commandButton" title="Browse to Find Directory" onclick="zenPage.browseSelect();"/>
</hgroup>
</vgroup>
<html id="status"/>
<timer id="timer" ontimeout="zenPage.updateStatus();"/>

<hgroup id="buttonGroup">
<button id="cmdRun" controlClass="commandButton" caption="Run" title="" onclick="zenPage.launchDSB();"/>
<!--<spacer width="10"/>-->
</hgroup>
</pane>
]]></Data>
</XData>

<Method name="setExportDirectory">
<Description>
Set the export directory.</Description>
<FormalSpec>dir</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	this.directory = dir;
	// update contents display
	zen('exportDirectory').refreshContents();
]]></Implementation>
</Method>

<Method name="browseSelect">
<Description>
User clicked the Browse button.</Description>
<Internal>1</Internal>
<FormalSpec>name</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var dir = zen('htmlDirectory').getValue();
	var showdirectoryonly = 1;
	zenLaunchPopupWindow('%ZEN.Dialog.fileSelect.zen?Dir='+encodeURIComponent(dir)+'&showdirectoryonly='+showdirectoryonly,'fileSelect','resizable,width=600,height=700');
]]></Implementation>
</Method>

<Method name="%OnGetTitle">
<Description>
Get the (localized) title string for the page.</Description>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Quit $$$Text("DeepSeeButtons Viewer")
]]></Implementation>
</Method>

<Method name="%OnGetPageName">
<Description>
Get the name for the page.</Description>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Quit $$$Text("DeepSeeButtons Viewer")
]]></Implementation>
</Method>

<Method name="%OnGetProductName">
<Description>
Get the product name for the page.</Description>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Quit "DeepSee"
]]></Implementation>
</Method>

<Method name="OnGetRibbonInfo">
<Description>
Get information to display in the ribbon bar.</Description>
<FormalSpec>*pDisplay:%Boolean,*pViewIcons:%List,*pSortOptions:%List,*pSearchBox:%Boolean,*pRibbonTitle:%String,*pCommands:%List</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set pDisplay = 1
	Set pSearchBox = 0
	Set pRibbonTitle = $$$Text("DeepSeeButtons Viewer")
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="applyDetails">
<Description>
Apply changes from detail form.</Description>
<FormalSpec>id</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	switch(id) {
	case 'getLogs':
		var elem = zen(id);
		var val = elem.getValue();
		elem.setValue(val);
	}
]]></Implementation>
</Method>

<Method name="onPopupAction">
<Description>
This client event is fired when the a popup page launched from this page fires an action.</Description>
<FormalSpec>popupName,action,value</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	console.log("onPopupAction - popupName="+popupName)
	switch(popupName) {
	case 'switchNamespace':
		var homeurl = zenLink("/csp/sys/%25CSP.Portal.Home.zen");
		var url = zenPage.GetNewURL(value,"_DeepSee.UI.DSButtonsViewer.zen");
		if (url == "" || value == "%SYS") url = homeurl;
		self.document.location = url;
		break;
	case 'GetCubeList':
		zenSetProp("Cubes","value",value)
		break;
	case 'fileSelect':
		zen('htmlDirectory').setValue(value);
		zenPage.setExportDirectory(value);
		break;	
	}
]]></Implementation>
</Method>

<Method name="%GetDeepSeeButtonsFileName">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>pFileName:%String="DeepSeeTasks"</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Quit ##class(%Library.File).NormalizeFilename($system.Util.ManagerDirectory() _ pFileName _ "_" _ $ZU(5) _ ".log")
]]></Implementation>
</Method>

<Method name="%OnAfterCreatePage">
<Description>
This class method callback is called just before the server-side page 
object is created.</Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tSC = $$$OK
	Try {
		Set ..nameSpace = $Namespace
		Set tSC = ##super()
		If $$$ISERR(tSC) Quit
	}
	Catch(ex) {
		Set tSC = ex.AsStatus()
	}
	Quit tSC
]]></Implementation>
</Method>

<Method name="editItem">
<FormalSpec>what</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	console.log("editItem")
	var uiclass = "_DeepSee.UI.Dialog.GetProperties.cls";
	var spec = "status,scrollbars,resizable=yes,width=640,height=680";
	switch(what) {
	case 'GetCubeList':
		var value = zen("Cubes").getValue();
		var uiclass = "_DeepSee.UI.Dialog.GetCubeList.cls";
		break;
	}
	var parms = {
		VALUE: value,
		WHAT: what
	};
	console.log("parms:")
	console.log(parms)
	zenLaunchPopupWindow(uiclass,what,spec,parms);
]]></Implementation>
</Method>

<Method name="launchDSB">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	//Clear the Status table from previous reports
 	zen('status').setContent("");
	this.disableCommandButton("cmdRun");	
	zenSetProp("cmdRun","disabled",1)	
	var getLogs = zen("getLogs").getValue() * 1;
	this.trackingId = this.RunDeepSeeButtons(this.nameSpace, zen("Cubes").getValue(), "", getLogs)
	console.log(this.trackingId)
	if (this.trackingId!='') {
		zen('timer').timeout = 250;
		zen('timer').startTimer();
	} else {
		
	}	
	return;
]]></Implementation>
</Method>

<Method name="RunDeepSeeButtons">
<Description>
Start the build cube process in the background.
Return the tracking id.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pNameSpace:%String,pCubes:%String="",htmlfile:%String="",pGetLogs:%Integer=1</FormalSpec>
<ReturnType>%String</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	Set tTrackingId = ""
	Set tJobTimeOut = 10
	Set pProceed=1
	Set pTracking=1
	Job ^DeepSeeButtons(pNameSpace,pCubes,pGetLogs,htmlfile,pTracking)::tJobTimeOut
	If '$Test {
		&js<alert('Unable to start background job.');>
		Set tTrackingId = ""
	} Else {
		Set tTrackingId = $ZChild
	}
	Quit tTrackingId
]]></Implementation>
</Method>

<Method name="updateStatus">
<Description>
Update the status area.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var status = this.CheckStatus(this.trackingId);
	var html = zen('status');
	if (status != '') { 
		html.setContent(status);
		zen('timer').timeout = 250;
		zen('timer').startTimer();
	} else {
		this.trackingId = '';
		zenSetProp("cmdShow","hidden",0)
		zenSetProp("cmdRun","disabled",0)
	}
	return;
]]></Implementation>
</Method>

<Method name="CheckStatus">
<Description>
Get the current status of the background task.
ClassMethod CheckStatus(pTrackingId As %String) As %String</Description>
<FormalSpec>pTrackingId:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	Set tOutput = ""
	Set tIsComplete = 0
	// status is ($J,step) = $LB(phase,count,pct,errors)
	Set tStep = $O(^IRIS.Temp.DeepSeeButtonsTrack(pTrackingId,""),1,info)
	s tErr=""
	While (tStep'="") {
		Set tPhase = $LG(info,1)
		Set:tPhase="complete"!(tPhase="error") tIsComplete = 1
		//Set tMsg = $Case(tPhase,"delete":$$$Text("Deleting facts"),"cube":$$$Text("working on cube"),"indices":$$$Text("Building indices"),"aggs":$$$Text("Computing aggregates"),"iknow":$$$Text("Processing iKnow measures"),"error":$$$Text("Error"),:$$$Text("Complete"))
		Set tMsg = $LG(info,2)
		Set tDetail = $LG(info,3)
		Set tIsActive = $O(^IRIS.Temp.DeepSeeButtonsTrack(pTrackingId,""),-1) = tStep
		If tErr = "" {
			If (tPhase="cube") {
 				Set cube = $O(^IRIS.Temp.DeepSeeButtonsTrack(pTrackingId,tStep,""),1,infocube)
 				While (cube'="") {	 
 					Set tOutput = tOutput _ "<tr style="""_$S(tErr'="":"color:#da4848;",tIsActive:"font-weight:bold;",1:"background:#E0E0F0;")_""">"
 					Set tMsg = $LG(infocube,2)
					Set tDetail = $LG(infocube,3)
	 				Set tMsg = tDetail_": "_tMsg
					Set tDetail = "" 			
 					Set tOutput = tOutput _ "<td align=""left"">"_tMsg_"</td>"
		 			Set tOutput = tOutput _ "<td>"_$S(tIsActive:"&nbsp;",1:$$$Text("Complete"))_"</td>"
	 				Set tOutput = tOutput _ "</tr>"
	 				Set cube = $O(^IRIS.Temp.DeepSeeButtonsTrack(pTrackingId,tStep,cube),1,infocube)	 				
 				}
			} ElseIf tPhase="save" {
				Set ..htmlPath = tDetail				
				Set tLink = "<a "
 				Set tLink = tLink _ "href='"_"_DeepSee.UI.DeepSeeButtonsDownload.cls?FILE="_..htmlPath_"' "
 				Set tLink = tLink _ "target='_blank' "
 				Set tLink = tLink _ "title='Open the generated DeepSeeButtons report' "
 				Set tLink = tLink _ ">"_..htmlPath_"</a>"	
				Set tOutput = tOutput _ "<tr style="""_$S(tErr'="":"color:#da4848;",tIsActive:"font-weight:bold;",1:"background:#E0E0F0;")_""">"
				Set tOutput = tOutput _ "<td align=""left"">"_tMsg_"<br>"_tLink_"</td>"
				Set tOutput = tOutput _ "<td>"_$S(tIsActive:"&nbsp;",1:$$$Text("Complete"))_"</td>"
				Set tOutput = tOutput _ "</tr>"
			} Else {
				Set tOutput = tOutput _ "<tr style="""_$S(tErr'="":"color:#da4848;",tIsActive:"font-weight:bold;",1:"background:#E0E0F0;")_""">"
				Set tOutput = tOutput _ "<td align=""left"">"_tMsg_"</td>"
				Set tOutput = tOutput _ "<td>"_$S(tIsActive:"&nbsp;",1:$$$Text("Complete"))_"</td>"
				Set tOutput = tOutput _ "</tr>"
			}
		} Else {
			/// Write out errors
			Set tOutput = tOutput _ "<td colspan=""4"">"_$ZCVT(tErr,"O","HTML")_"</td>"
		}
		Set tStep = $O(^IRIS.Temp.DeepSeeButtonsTrack(pTrackingId,tStep),1,info)
	}
	Set:(tOutput'="") tOutput = "<div>"_$$$Text("Status")_ "</div><table class=""statusTable"" cellspacing=""0"" width=""100%"">" _ tOutput _ "</table>"
	Kill:tIsComplete ^IRIS.Temp.DeepSeeButtonsTrack(pTrackingId)
	Quit tOutput
]]></Implementation>
</Method>
</Class>


<Class name="%DeepSee.UI.DeepSeeButtonsDownload">
<Super>%ZEN.Component.page,%CSP.StreamServer</Super>
<TimeChanged>64735,54438.891408</TimeChanged>
<TimeCreated>64735,54438.891408</TimeCreated>
<Inheritance>right</Inheritance>

<Method name="OnPreHTTP">
<Description><![CDATA[
The <method>OnPostHTTP()</method> is called by the CSP dispatcher before the HTTP
headers have been sent. Here, 
then we set the appropriate content type and content length values into the %response
object (see <class>%CSP.Request</class>), in preparation for sending the image data
in the <method>OnPage()</method>.]]></Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	If %request.Get("FILE")="" Quit 0
   // Now, the OnPage() method will serve up the actual FILE data
  	s %SavedStream = ##class(%FileBinaryStream).%New()
	s %SavedStream.Filename=%request.Get("FILE")
	
  If (%SavedStream '= $$$NULLOREF) {
        //Set %response.ContentType = %request.Get("CONTENTTYPE")
		Set %response.Expires=10
        Do %response.SetHeader("content-disposition","attachment; filename="_%request.Get("FILE"))
   } Else {
        Set %response.Status="404" ; HTTP file not found
        Quit 0 
    }

    Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnPage">
<Description><![CDATA[
The <method>OnPage()</method> is called by the CSP dispatcher to generate the
page content. Since the content type is actually a stream, not HTML
we simply write out the stream data.]]></Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    // Write out the Actual Binary Data
    If %SavedStream'=$$$NULLOREF Do %SavedStream.OutputToDevice()
    Quit $$$OK
]]></Implementation>
</Method>
</Class>


<Class name="%DeepSee.UI.Dialog.GetCubeList">
<Description><![CDATA[
This dialog lets the user add or edit cubes and subject areas for DeepSeeButtons.<br>
An existing list (delimited by comma) may be passed in.]]></Description>
<Super>%DeepSee.UI.Dialog.standardDialog</Super>
<System>4</System>
<TimeChanged>64736,32786.023525</TimeChanged>
<TimeCreated>64727,63621.331352</TimeCreated>

<Parameter name="APPLYBUTTON">
<Default>0</Default>
</Parameter>

<Property name="Expression">
<Description>
Cube name.</Description>
<Type>%ZEN.Datatype.string</Type>
<Parameter name="ZENURL" value="VALUE"/>
</Property>

<Property name="domain">
<Description>
Property WHAT As %ZEN.Datatype.string(ZENURL = "WHAT");
Property dataSource As %ZEN.Datatype.string(ZENURL = "DATASOURCE");
Property CONTEXT As %ZEN.Datatype.string(ZENURL = "CONTEXT");
Translation domain of the cube</Description>
<Type>%ZEN.Datatype.string</Type>
</Property>

<XData name="Style">
<Data><![CDATA[
<style type="text/css">
#dataSourceViewbox {
	display:inline-block; 
	height:400px; 
	max-height:400px; 
	overflow:auto;
	max-width:200px;
}
</style>
]]></Data>
</XData>

<XData name="dialogBody">
<Description>
Contents of the dialog body.</Description>
<XMLNamespace>http://www.intersystems.com/zen</XMLNamespace>
<Data><![CDATA[
<pane xmlns="http://www.intersystems.com/zen" cellStyle="padding-bottom:8px;">
<vgroup labelPosition="left">
</vgroup>
<label id="titleText" enclosingStyle="padding:2px;"
label="Create a list of cubes and subject areas on which DeepSeeButtons will gather detailed information. Select a cube or subject are by double clicking a cube or subject area from the list. Selecting ALL for all cubes and subject areas (DeepSeeButtons might take some time)"/>
<hgroup cellStyle="padding:4px;" cellVAlign="top">
<group id="dataSourceViewbox" layout="none" >  
<dynaTree id="dataSource"  label="Cubes and Subject Areas"
 imageContracted="images/disclosure-contracted.gif"
 imageExpanded="images/disclosure-expanded.gif"
 imageNode="images/spacer.gif"
 childIndent="10"
 ondblclick="zenPage.selectCube(zenThis);" dragEnabled="false"
	showLines="false" showFolders="false"
	OnGetTreeInfo="GetCubeInfo">
</dynaTree>
</group>
<spacer width="5px"/>
<vgroup>
<listBox id="lstCubes" label="Cube and Subject Area list" width="350px" listHeight="370px" onchange=""/>
<spacer height="1"/>
</vgroup>

<vgroup id="idGroupButtons">
<image src="/csp/broker/images/spacer.gif" width="16" height="16"/>
<image src="deepsee/close_a_16.png" width="16" height="16" title="Remove the selected cube or subject area" onclick="zenPage.doRemove();"/>
<image src="/csp/broker/images/spacer.gif" width="16" height="16"/>
<image src="deepsee/up_16.png" width="16" height="16" title="Move the selected cube or subject area up" onclick="zenPage.moveItem('up');"/>
<image src="deepsee/down_16.png" width="16" height="16" title="Move the selected cube or subject area down" onclick="zenPage.moveItem('dn');"/>
</vgroup>
</hgroup>
</pane>
]]></Data>
</XData>

<Method name="%OnGetTitle">
<Description>
Get the (localized) title string for the dialog.
This should be implemented in a subclass.</Description>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Quit $$$TextHTML("Cube Selector")
]]></Implementation>
</Method>

<Method name="%OnGetSubtitle">
<Description>
Get the (localized) subtitle string for the dialog.
This should be implemented in a subclass.</Description>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Quit $$$TextHTML("Cube Selector")
]]></Implementation>
</Method>

<Method name="getDialogValue">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	console.log("getDialogValue")
	try {
		var values = "";
		var cubeObj = zen('lstCubes');
		var len = cubeObj.getOptionCount();
		if (len > 0) values = cubeObj.getOptionValue(0);
		for (var i=1; i<len; i++) {
			values = values + "," + cubeObj.getOptionValue(i);
		}
		return encodeURIComponent(values);
		}
	catch(ex) {
		zenExceptionHandler(ex,arguments);
	}
	return '';
]]></Implementation>
</Method>

<Method name="doRemove">
<Description>
User clicked the Remove image. Remove the cube or subject area from the list box.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var cubeObj = zen('lstCubes');
	var len = cubeObj.getOptionCount();
	if (len == 0) return;
	var idx = cubeObj.getProperty("selectedIndex");
	if (idx < 0) {
		alert($$$Text("Please select the cube or subject area you want to remove and try again."));
		return;
	}
	cubeObj.removeOption(idx);
]]></Implementation>
</Method>

<Method name="moveItem">
<Description>
User clicked the Move Up/Down image. Move the cube or subject area up or down one level in the list box. dir = "up" or "dn".</Description>
<FormalSpec>dir</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var cubeObj = zen('lstCubes');
	var len = cubeObj.getOptionCount();
	if (len == 0) return;
	var idx = cubeObj.getProperty("selectedIndex");
	if (idx < 0) {
		alert($$$Text("Please select the cube you want to move and try again."));
		return;
	}
	var row = idx;
	if (dir == "up") {
		row--;
	} else {
		row++;	
	}
	if (row >= 0) cubeObj.moveOption(idx,row);
]]></Implementation>
</Method>

<Method name="selectCube">
<Description>
User selected a cube or subject are from the list. Get the cube or SA name for the selected value and put it into the list box.</Description>
<FormalSpec>sourceObj</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	//var propFullValue = sourceObj.getNodeValue(sourceObj.getProperty("selectedIndex")); //"<CUBENAME>"
	var cubeObj = zen('lstCubes');
	if (sourceObj.text == "ALL") {
		cubeObj.resetOptions()
	}	
	cubeObj.appendOption(sourceObj.text,sourceObj.text);
]]></Implementation>
</Method>

<Method name="%OnAfterCreatePage">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tSC = $$$OK
	Try {
		#; Load existing cubes or SAs into list
		If ..Expression '= "" {
			Set tCombo = ..%GetComponentById("lstCubes")
			
			Set cubeList = $LISTFROMSTRING(..Expression)
			Set cubeListLength=$LISTLENGTH(cubeList)
			For i=1:1:cubeListLength {
				Set tRow=$LG(cubeList,i)
				Set tOption = ##class(%ZEN.Auxiliary.option).%New()
				Do tCombo.options.Insert(tOption)
				Do ..%AddComponent(tOption)
				Set tOption.value = tRow
				Set tOption.text = tRow
				
		 	}
		}
	} Catch(ex) {
		Set tSC = ex.AsStatus()
	}
	Quit tSC
]]></Implementation>
</Method>

<Method name="GetCubeInfo">
<Description>
Provide contents of the data source tree.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pRoot:%String,*pTree,&pParms]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tSC = $$$OK
	
	Set pTree(0,"ch",1)=""
	Set pTree(1)=$LB("ALL","ALL",0,"",1)
	
	Do ##class(%DeepSee.Utils).%GetCubeList(.cubeList,,1)
	Set cubetmp=""
	For i=1:1 {
		Set cubetmp=$order(cubeList(cubetmp))
		Quit:cubetmp=""
		Set ind=$I(pTree)+1 //+1 to allow ALL
		Set pTree(0,"ch",ind)=""
		Set pTree(ind)=$LB(cubetmp,cubetmp,0,"",1)
	}
	Quit tSC
]]></Implementation>
</Method>
</Class>


<Project name="Project1" LastModified="2018-03-30 11:14:18.54132">
  <Items>
    <ProjectItem name="%DeepSee.UI.DeepSeeButtonsDownload" type="CLS"></ProjectItem>
    <ProjectItem name="%DeepSee.UI.DSButtonsViewer" type="CLS"></ProjectItem>
    <ProjectItem name="%DeepSee.UI.Dialog.GetCubeList" type="CLS"></ProjectItem>
  </Items>
</Project>
</Export>
